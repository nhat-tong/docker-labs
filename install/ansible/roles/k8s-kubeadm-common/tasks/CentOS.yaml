---

  - name: Letting iptables see bridged traffic
    shell: |
      cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
        br_netfilter
      EOF
      cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
        net.bridge.bridge-nf-call-ip6tables = 1
        net.bridge.bridge-nf-call-iptables = 1
      EOF
      sudo sysctl --system
  
  - name: Install and configure prerequisites for containerd
    shell: |
      cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
        overlay
        br_netfilter
      EOF

      sudo modprobe overlay
      sudo modprobe br_netfilter

      # Setup required sysctl params, these persist across reboots.
      cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf
        net.bridge.bridge-nf-call-iptables  = 1
        net.ipv4.ip_forward                 = 1
        net.bridge.bridge-nf-call-ip6tables = 1
      EOF

      # Apply sysctl params without reboot
      sudo sysctl --system

  - name: Set up the stable repository
    shell: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

  - name: Install yum-utils package
    yum:
      name:
      - yum-utils
      - containerd.io
      update_cache: yes
      state: present

  - name: Configure containerd
    shell: |
      sudo mkdir -p /etc/containerd
      containerd config default | sudo tee /etc/containerd/config.toml

  - name: Restart containerd
    service:
      name: containerd
      state: restarted

  - name: Check if kubernetes.repo exists
    stat:
      path: /etc/yum.repos.d/kubernetes.repo
    register: k8s_repo

  - name: Create yum kubernetes repo
    shell: >
      basearch="${HOSTTYPE:-$(uname --machine)}";
      cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
        [kubernetes]
        name=Kubernetes
        baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-$basearch
        enabled=1
        gpgcheck=1
        repo_gpgcheck=1
        gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
        exclude=kubelet kubeadm kubectl
      EOF

      # Set SELinux in permissive mode (effectively disabling it)
      sudo setenforce 0
      sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
    when: not k8s_repo.stat.exists

  - name: Install kubeadm, kubelet and kubectl
    shell: sudo yum install -y kubelet-{{ KUBERNETES_VERSION }} kubeadm-{{ KUBERNETES_VERSION }} kubectl-{{ KUBERNETES_VERSION }} --disableexcludes=kubernetes

  - name: Enable kubelet on boot
    service:
      name: kubelet
      enabled: true